[gd_scene load_steps=6 format=3 uid="uid://dlu5t2n7dkg62"]

[ext_resource type="Texture2D" uid="uid://qfnvt884xgtw" path="res://assets/sprites/dino_cell.png" id="1_6xwmd"]
[ext_resource type="Texture2D" uid="uid://tuqmkbn0vwx3" path="res://assets/sprites/Dinosaurios/T-REX BEBE.png" id="2_cll0a"]
[ext_resource type="PackedScene" uid="uid://cgas6c7kt33q1" path="res://scenes/ui/info_box.tscn" id="2_todmk"]
[ext_resource type="Texture2D" uid="uid://dpgjyhem1av6u" path="res://assets/sprites/Dinosaurios/T-Rex Adulto.png" id="3_h4r3f"]

[sub_resource type="GDScript" id="GDScript_pabg6"]
script/source = "extends Node2D


const MINUTES_PER_DAY = 1440 
const MINUTES_PER_HOUR = 60
const INGAME_TO_REAL_MINUTE_DURATION = (2 * PI) / MINUTES_PER_DAY

var cell_position
var building_name:String = \"Jaula del Tiranosaurio\"
var is_point_inside = false
# cooldown is defined in in-game minutes 
var cooldown = 15
# This variables are used when loading and unloading a game file
var target_minute = 60
var target_hour = 24
# How much money does it generate
var revenue = 200

@onready var menu_box = $MenuBox
@onready var tile_map = get_parent()


# Called when the node enters the scene tree for the first time.
func _ready():
	cell_position = tile_map.local_to_map(position)
	tile_map.set_cell(1,cell_position,1,Vector2i(0,1))
	_timer()

func _process(delta):
	var total_minutes = int(Global.time / INGAME_TO_REAL_MINUTE_DURATION)
	var current_day_minutes = total_minutes % MINUTES_PER_DAY
	var current_minute = int(current_day_minutes % MINUTES_PER_HOUR)
	var current_hour = int(current_day_minutes / MINUTES_PER_HOUR)
	if target_minute == current_minute and target_hour == current_hour:
		on_time()
# Handles input
func _input(event):
	# Check if the event is a mouse button press
	if is_point_inside:
			if event.is_action_pressed(\"click_left\"):
				if Global.building_mode == false:
					on_click()
			if event.is_action_pressed(\"click_right\"):
				if Global.building_mode:
					tile_map.erase_cell(1,cell_position)
					tile_map.remove_child(self)
					queue_free()

# Function to check if a mouse is inside the collision shape
func _on_area_2d_mouse_entered():
	is_point_inside = true

func _on_area_2d_mouse_exited():
	is_point_inside = false

# Its called when the building is clicked
func on_click():
	var new_state = !menu_box.visible
	menu_box.visible = new_state
	if new_state == true :
		menu_box.position = menu_box.position - Vector2i(20,20)
		menu_box.mesage(building_name,\"Actualmente esta generando: \" + \"$\" + str(revenue) + \" cada \" + str(cooldown) + \" minutos\" )

# Defines what properties will be saved 
func on_save_game(saved_data:Array[SavedData]):
	var my_data = SavedData.new()
	my_data.position = global_position
	my_data.building_name = building_name
	my_data.scene_path = scene_file_path
	my_data.minutes_left = target_minute
	my_data.hours_left = target_hour 
	saved_data.append(my_data)
# Destroys itself before loading to not cause repetion
func on_before_load():
	tile_map.erase_cell(1,cell_position)
	tile_map.remove_child(self)
	queue_free()
# Asigns properties to the building after loading the game
func on_load_game(saved_data:SavedData):
	global_position = saved_data.position
	target_minute = saved_data.minutes_left
	target_hour = saved_data.hours_left
	building_name = saved_data.building_name
# Sets a target hour and a taget minute to when the timer should end
func _timer() -> void:
	
	var total_minutes = int(Global.time / INGAME_TO_REAL_MINUTE_DURATION)
	var current_day_minutes = total_minutes % MINUTES_PER_DAY
	var current_minute = int(current_day_minutes % MINUTES_PER_HOUR)
	var current_hour = int(current_day_minutes / MINUTES_PER_HOUR)
	var sum = current_minute + cooldown
	var hour = int(sum / 60) + current_hour
	
	if hour > 23:
		target_hour = hour - 24
	else :
		target_hour = hour
	if sum > 59 :
		target_minute = (sum%60)
	else:
		target_minute = sum
#Defines what happens when the timer ends
func on_time():
	Global.money += revenue
	_timer()

func minutes(x):
	return 60/x
"

[node name="T-Rex" type="Node2D" groups=["buildings", "game_objects"]]
script = SubResource("GDScript_pabg6")

[node name="Jaula" type="Sprite2D" parent="."]
position = Vector2(0.999999, -78)
scale = Vector2(1.18359, 1.16667)
texture = ExtResource("1_6xwmd")

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Area2D"]
position = Vector2(-1, -6)
polygon = PackedVector2Array(0, -64, -127, 0, 0, 65, 83.9732, 23.0134, 128, 1)

[node name="Bebe" type="Sprite2D" parent="."]
position = Vector2(1, -49)
scale = Vector2(0.201, 0.201)
texture = ExtResource("2_cll0a")

[node name="Adulto" type="Sprite2D" parent="."]
visible = false
position = Vector2(0, -61)
scale = Vector2(0.314, 0.314)
texture = ExtResource("3_h4r3f")

[node name="MenuBox" parent="." instance=ExtResource("2_todmk")]
initial_position = 2
visible = false

[connection signal="mouse_entered" from="Area2D" to="." method="_on_area_2d_mouse_entered"]
[connection signal="mouse_exited" from="Area2D" to="." method="_on_area_2d_mouse_exited"]

[editable path="MenuBox"]
